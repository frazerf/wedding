{"mappings":"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","sources":["js/main.js"],"sourcesContent":["// nav.js\n// Consolidate into one DOMContentLoaded event handler\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Get all relevant elements\n  const hamburger = document.querySelector('.hamburger-menu');\n  const navLinks = document.querySelector('.nav-links');\n  const navLinksAnchors = document.querySelectorAll('.nav-links a[href^=\"#\"]');\n  \n  // Hamburger menu toggle\n  hamburger.addEventListener('click', function() {\n    this.classList.toggle('active');\n    navLinks.classList.toggle('active');\n  });\n  \n  // Smooth scrolling for all anchor links\n  document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n    anchor.addEventListener('click', function(e) {\n      e.preventDefault();\n      \n      // Get the target section id from the href attribute\n      const targetId = this.getAttribute('href');\n      const targetSection = document.querySelector(targetId);\n      \n      // Only scroll if target exists\n      if (targetSection) {\n        // Close mobile menu if open\n        if (hamburger.classList.contains('active')) {\n          hamburger.classList.remove('active');\n          navLinks.classList.remove('active');\n        }\n        \n        // Get offset position and scroll\n        const offsetTop = targetSection.offsetTop;\n        window.scrollTo({\n          top: offsetTop,\n          behavior: 'smooth'\n        });\n      }\n    });\n  });\n  \n  // Sticky header logic\n  let lastScroll = 0;\n  window.addEventListener('scroll', function() {\n    const currentScroll = window.pageYOffset;\n    const header = document.querySelector('.site-header');\n    \n    if (currentScroll > 50) {\n      header.classList.add('scrolled');\n    } else {\n      header.classList.remove('scrolled');\n    }\n    \n    lastScroll = currentScroll;\n  });\n});\n\n// Hero Carousel\n// animations.js - Hero image fading\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // Only run if we have the hero section\n  const heroSection = document.querySelector(\".hero-section\");\n  if (!heroSection) return;\n\n  // Create the background elements\n  const heroBackground = document.querySelector(\".hero-background\");\n  const image1 = document.createElement(\"div\");\n  const image2 = document.createElement(\"div\");\n\n  image1.classList.add(\"hero-background\", \"image-1\");\n  image2.classList.add(\"hero-background\", \"image-2\");\n\n  heroSection.appendChild(image1);\n  heroSection.appendChild(image2);\n\n  // Set up the image rotation\n  let activeImage = 1;\n\n  function rotateBackgroundImages() {\n    if (activeImage === 1) {\n      image1.style.opacity = \"0\";\n      image2.style.opacity = \"1\";\n      activeImage = 2;\n    } else {\n      image1.style.opacity = \"1\";\n      image2.style.opacity = \"0\";\n      activeImage = 1;\n    }\n  }\n\n  // Change image every 7 seconds\n  setInterval(rotateBackgroundImages, 7000);\n});\n\n// JavaScript for countdown timer\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // Get all countdown timers on the page\n  const countdownTimers = document.querySelectorAll(\".countdown-timer\");\n\n  // Function to create a countdown for a specific element and date\n  function createCountdown(element, targetDate) {\n    // Get the display elements within this countdown\n    const daysEl = element.querySelector(\".days\");\n    const hoursEl = element.querySelector(\".hours\");\n    const minutesEl = element.querySelector(\".minutes\");\n    const secondsEl = element.querySelector(\".seconds\");\n\n    // Don't proceed if elements aren't found\n    if (!daysEl || !hoursEl || !minutesEl || !secondsEl) {\n      console.error(\"Countdown elements not found\");\n      return;\n    }\n\n    // Update the countdown every second\n    return setInterval(function () {\n      // Get current date and time\n      const now = new Date().getTime();\n\n      // Find the distance between now and the target date\n      const distance = targetDate - now;\n\n      // If the countdown is over\n      if (distance < 0) {\n        clearInterval(countdown);\n        daysEl.innerHTML = \"00\";\n        hoursEl.innerHTML = \"00\";\n        minutesEl.innerHTML = \"00\";\n        secondsEl.innerHTML = \"00\";\n\n        // Add completed message if needed\n        const container = element.closest(\".countdown-container\");\n        if (container) {\n          const messageEl = document.createElement(\"p\");\n          messageEl.classList.add(\"countdown-complete-message\");\n          messageEl.innerHTML = \"This event has begun!\";\n          container.appendChild(messageEl);\n        }\n\n        return;\n      }\n\n      // Time calculations for days, hours, minutes and seconds\n      const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      // Display the result with leading zeros\n      daysEl.innerHTML = days.toString().padStart(2, \"0\");\n      hoursEl.innerHTML = hours.toString().padStart(2, \"0\");\n      minutesEl.innerHTML = minutes.toString().padStart(2, \"0\");\n      secondsEl.innerHTML = seconds.toString().padStart(2, \"0\");\n    }, 1000);\n  }\n\n  // Setup each countdown timer with its specific date\n  countdownTimers.forEach((timer) => {\n    // Get the target date from data attribute\n    const dateStr = timer.getAttribute(\"data-target-date\");\n    if (!dateStr) {\n      console.error(\"Missing data-target-date attribute\");\n      return;\n    }\n\n    const targetDate = new Date(dateStr);\n    createCountdown(timer, targetDate);\n  });\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  // Get all tab headers\n  const tabHeaders = document.querySelectorAll(\".tab-header\");\n  const tabContents = document.querySelectorAll(\".tab-content\");\n\n  // Add click event to each tab header\n  tabHeaders.forEach((header) => {\n    header.addEventListener(\"click\", function () {\n      // Remove active class from all headers and contents\n      tabHeaders.forEach((h) => h.classList.remove(\"active\"));\n      tabContents.forEach((c) => c.classList.remove(\"active\"));\n\n      // Add active class to current header\n      this.classList.add(\"active\");\n\n      // Get the associated tab content and activate it\n      const tabId = this.getAttribute(\"data-tab\");\n      document.getElementById(tabId).classList.add(\"active\");\n    });\n  });\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Select all accordion items\n  const accordionItems = document.querySelectorAll('.accordion-item');\n  \n  // Add click event listeners to each accordion header\n  accordionItems.forEach(item => {\n    const header = item.querySelector('.accordion-header');\n    \n    header.addEventListener('click', function() {\n      // Toggle active class on the clicked item\n      item.classList.toggle('active');\n      \n      // Toggle aria-expanded attribute for accessibility\n      const isExpanded = item.classList.contains('active');\n      header.setAttribute('aria-expanded', isExpanded);\n      \n      // Optional: Close other open accordions (comment out for multiple open)\n      if (isExpanded) {\n        accordionItems.forEach(otherItem => {\n          if (otherItem !== item && otherItem.classList.contains('active')) {\n            otherItem.classList.remove('active');\n            otherItem.querySelector('.accordion-header').setAttribute('aria-expanded', false);\n          }\n        });\n      }\n    });\n  });\n});"],"names":[],"version":3,"file":"index.72be8890.js.map","sourceRoot":"/__parcel_source_root/"}